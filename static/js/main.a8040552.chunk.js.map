{"version":3,"sources":["utils/store.js","components/Fallback/index.js","components/Fallback/Fallback.js","routes.js","app.js","reportWebVitals.js","index.js","utils/firebase.js","utils/config.js","slices/app.slice.js","utils/const.js","components/FontIcon/FontIcon.js","components/FontIcon/index.js","components/Spinner/Spinner.js","components/Spinner/index.js"],"names":["store","configureStore","reducer","app","middleware","getDefaultMiddleware","Fallback","useEffect","NProgress","start","done","Auth","React","lazy","Dashboard","Router","dispatch","useDispatch","useSelector","state","checked","loggedIn","actions","authenticate","fallback","path","dashboard","to","className","Spinner","size","color","isLoading","App","loadFontIcons","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","analytics","auth","firestore","storage","ref","performance","slice","createSlice","name","initialState","me","reducers","setMe","action","payload","setLoggedIn","onAuthStateChanged","a","collection","doc","uid","get","user","emailVerified","exists","id","data","signup","fullName","email","password","Promise","resolve","reject","createUserWithEmailAndPassword","sendEmailVerification","set","login","signInWithEmailAndPassword","Error","logout","signOut","resetPassword","sendPasswordResetEmail","profile","confirmEmail","FontIcon","style","icon","defaultProps","library","add","faExclamationTriangle","faEnvelopeOpenText","faPaperPlane","others","loading"],"mappings":"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","file":"static/js/main.a8040552.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport app from 'slices/app.slice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    app,\r\n  },\r\n  middleware:\r\n    process.env.NODE_ENV === 'production'\r\n      ? [...getDefaultMiddleware()]\r\n      : [...getDefaultMiddleware(), logger],\r\n})\r\n\r\nexport default store\r\n","import Fallback from './Fallback'\r\n\r\nexport default Fallback\r\n","import { useEffect } from 'react'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nconst Fallback = () => {\r\n  useEffect(() => {\r\n    NProgress.start()\r\n    return () => {\r\n      NProgress.done()\r\n    }\r\n  })\r\n\r\n  return ''\r\n}\r\n\r\nexport default Fallback\r\n","import React, { Suspense, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport { actions } from 'slices/app.slice'\r\nimport { path } from 'utils/const'\r\nimport Fallback from 'components/Fallback'\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst Auth = React.lazy(() => import('./pages/auth'))\r\nconst Dashboard = React.lazy(() => import('./pages/dashboard'))\r\n\r\nfunction Router() {\r\n  const dispatch = useDispatch()\r\n  const { checked, loggedIn } = useSelector((state) => state.app)\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.authenticate())\r\n  }, [])\r\n\r\n  if (!checked) {\r\n    return (\r\n      <div className=\"app-loader-container\">\r\n        <Spinner size=\"4rem\" color=\"white\" isLoading />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Suspense fallback={<Fallback />}>\r\n        {!loggedIn ? (\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route path={path.dashboard}>\r\n              <Dashboard />\r\n            </Route>\r\n            <Redirect to={path.dashboard} />\r\n          </Switch>\r\n        )}\r\n      </Suspense>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import { useEffect } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { loadFontIcons } from 'components/FontIcon'\r\nimport store from 'utils/store'\r\nimport Router from './routes'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    loadFontIcons()\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div data-testid=\"app\" className=\"app\">\r\n        <Router />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from 'app'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'theme/reset.scss'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\nimport 'firebase/performance'\r\nimport 'firebase/analytics'\r\nimport config from './config'\r\n\r\nfirebase.initializeApp(config.firebase)\r\nfirebase.analytics()\r\n\r\nexport const auth = firebase.auth()\r\nexport const storage = firebase.storage().ref()\r\nexport const performance = firebase.performance()\r\nexport const firestore = firebase.firestore()\r\n\r\nexport default firebase\r\n","export default {\r\n  firebase: {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  },\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { firestore, auth } from 'utils/firebase'\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  checked: false,\r\n  loggedIn: false,\r\n  me: {},\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setMe: (state, action) => ({\r\n      ...state,\r\n      me: action.payload.me,\r\n      loggedIn: action.payload.loggedIn,\r\n      checked: true,\r\n    }),\r\n    setLoggedIn: (state, action) => ({\r\n      ...state,\r\n      loggedIn: action.payload,\r\n    }),\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nexport const authenticate = () => (dispatch) => {\r\n  auth.onAuthStateChanged(async (me) => {\r\n    if (!me) {\r\n      return dispatch(\r\n        slice.actions.setMe({\r\n          loggedIn: false,\r\n          checked: true,\r\n          me: {},\r\n        }),\r\n      )\r\n    }\r\n\r\n    // get user from firestore\r\n    const user = await firestore.collection('users').doc(me?.uid).get()\r\n\r\n    // login\r\n    return dispatch(\r\n      slice.actions.setMe({\r\n        loggedIn: me?.emailVerified && user.exists,\r\n        me: user.exists\r\n          ? { id: me?.uid, emailVerified: me?.emailVerified, ...user.data() }\r\n          : {},\r\n        checked: true,\r\n      }),\r\n    )\r\n  })\r\n}\r\n\r\nconst signup =\r\n  ({ fullName, email, password }) =>\r\n  () =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // create user\r\n        const { user } = await auth.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        )\r\n\r\n        // send confirmation email\r\n        await user.sendEmailVerification()\r\n\r\n        // store user info in firestore\r\n        await firestore.collection('users').doc(user.uid).set({\r\n          fullName,\r\n          email,\r\n        })\r\n\r\n        resolve(user)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst login =\r\n  ({ email, password }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n        if (!user)\r\n          reject(new Error('Failed to login. please try it again later'))\r\n        if (!user.emailVerified) await user.sendEmailVerification()\r\n        dispatch(authenticate())\r\n        resolve(user)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst logout = () => (dispatch) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      await auth.signOut()\r\n      dispatch(\r\n        slice.actions.setMe({\r\n          checked: true,\r\n          loggedIn: false,\r\n          me: {},\r\n        }),\r\n      )\r\n      resolve()\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n\r\nconst resetPassword = (email) => () => auth.sendPasswordResetEmail(email)\r\n\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  authenticate,\r\n  signup,\r\n  login,\r\n  logout,\r\n  resetPassword,\r\n}\r\n\r\nexport default slice.reducer\r\n","export const path = {\r\n  login: '/login',\r\n  signup: '/signup',\r\n  profile: '/profile',\r\n  resetPassword: '/reset-password',\r\n  confirmEmail: '/confirm-email',\r\n  dashboard: '/dashboard',\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faExclamationTriangle,\r\n  faEnvelopeOpenText,\r\n  faPaperPlane,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\n// TODO: add icons here...\r\nexport const loadFontIcons = () =>\r\n  library.add(faExclamationTriangle, faEnvelopeOpenText, faPaperPlane)\r\n\r\nconst FontIcon = ({ name, className, style }) => (\r\n  <FontAwesomeIcon icon={name} className={className} style={style} />\r\n)\r\n\r\nFontIcon.propTypes = {\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  style: PropTypes.objectOf(PropTypes.object),\r\n}\r\n\r\nFontIcon.defaultProps = {\r\n  name: '',\r\n  className: '',\r\n  style: {},\r\n}\r\n\r\nexport default FontIcon\r\n","import FontIcon, { loadFontIcons as load } from './FontIcon'\r\n\r\nexport const loadFontIcons = load\r\n\r\nexport default FontIcon\r\n","import { PacmanLoader } from 'react-spinners'\r\nimport { PropTypes } from 'prop-types'\r\n\r\n/**\r\n * types of spinners\r\n * https://www.davidhu.io/react-spinners/\r\n *\r\n * github\r\n * https://github.com/davidhu2000/react-spinners\r\n */\r\n\r\nconst Spinner = ({ color, size, isLoading, ...others }) => (\r\n  <PacmanLoader color={color} size={size} loading={isLoading} {...others} />\r\n)\r\n\r\nSpinner.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n}\r\n\r\nSpinner.defaultProps = {\r\n  color: 'black',\r\n  size: '1.2rem',\r\n  isLoading: false,\r\n}\r\n\r\nexport default Spinner\r\n","import Spinner from './Spinner'\r\n\r\nexport default Spinner\r\n"],"sourceRoot":""}